<vncmvvm:ViewBase
    x:Class="SupportTools_Visio.Presentation.Views.CommandCockpit"
    x:Name="thisXMLCommands"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:local="clr-namespace:SupportTools_Visio.Presentation.Views"
    
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" 

    xmlns:views="clr-namespace:SupportTools_Visio.Presentation.Views"
    xmlns:viewModels="clr-namespace:SupportTools_Visio.Presentation.ViewModels"

    xmlns:core="clr-namespace:SupportTools_Visio.Core;assembly=SupportTools_Visio.Core"
    prism:ViewModelLocator.AutoWireViewModel="False"
    mc:Ignorable="d"

    d:DesignStyle="{StaticResource vncDesignStyle}"
>
    <!--xmlns:core="clr-namespace:SupportTools_Visio.Core;assembly=SupportTools_Visio.Core"-->
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White" />
        </Style>
    </d:DesignerProperties.DesignStyle>
    
    <UserControl.Resources>

    </UserControl.Resources>
    
    <dxlc:LayoutControl x:Name="layoutItems" Orientation="Vertical" Margin="4,20,-4,-20">
        <dxlc:LayoutItem             
                Label="Welcome to the evolving Commands Editor" 
                LabelPosition="Top"/>

        <dxlc:LayoutItem Label="Select Sections to Add" 
                         LabelPosition="Top">
            
        <views:wucVisioCommand_Picker x:Name="visioCommand_Picker" 
                                      ControlChanged="visioCommand_Picker_ControlChanged"/>

        </dxlc:LayoutItem>
        

        <dxlc:LayoutItem Label="Select Command"
         	LabelPosition="Top">
            <dxe:ComboBoxEdit x:Name="cbeCommand"
        		ItemsSource="{Binding Command}"
                ItemTemplate="{StaticResource dataTemplateCommand}"                                     
                EditValue="{Binding
                	Path=SelectedCommand,
                    Mode=TwoWay,
                    UpdateSourceTrigger=PropertyChanged,
                    Converter={StaticResource SelectedItemsConverter} }"
        >
                <dxe:ComboBoxEdit.StyleSettings>
                    <!--<dxe:CheckedTokenComboBoxStyleSettings/>-->
                    <!--<dxe:CheckedComboBoxStyleSettings/>-->
                    <dxe:RadioComboBoxStyleSettings/>
                    <!--<dxe:RadioTokenComboBoxStyleSettings/>-->
                    <!--<dxe:TokenComboBoxStyleSettings/>-->       
                </dxe:ComboBoxEdit.StyleSettings>
                <dxe:ComboBoxEditItem Content="Red" />
                <dxe:ComboBoxEditItem Content="Green" />
                <dxe:ComboBoxEditItem Content="Blue" />
            </dxe:ComboBoxEdit>
        </dxlc:LayoutItem>
        
        
        // >>> Start Cut One - Put this in ViewModel
        
        // >>> Start Cut Two - Put this in Properties
        
                private List<CommandWrapper> _command;
                public List<CommandWrapper> Command
                {
                    get => _command;
                    set
                    {
                        if (_command == value)
                            return;
                        _command = value;
                        OnPropertyChanged();
                    }
                }
        
        // <<< End Cut Two
        
        
        // <<< End Cut One
        
        
        
        <dxlc:LayoutItem>
            <dxe:TextEdit x:Name="teCommandElements" />
        </dxlc:LayoutItem>

        <dxlc:LayoutItem>
            <Button 
        		Command="{Binding ExecuteCommand }"
        		Content="{Binding ExecuteContent, FallbackValue='Execute' }"
        		ToolTip="{Binding ExecuteToolTip, FallbackValue='Execute ToolTip' }" />
        </dxlc:LayoutItem>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel>
                <TextBlock Text="XMLCommands" />
                <TextBlock Text="{Binding Message}" />
                <Button Content="Say Hello"
                    Command="{Binding SayHelloCommand}" />
            </StackPanel>

            <!-- This is useful for debugging V VM constructor issues -->

            <StackPanel Grid.Row="1" Orientation="Horizontal" >
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Content="V:" />
                    <Label Content="{Binding ElementName=thisXMLCommands, Path=InstanceCountV}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Content="VM:" />
                    <Label Content="{Binding InstanceCountVM}" />
                </StackPanel>
            </StackPanel>

        </Grid>
    </dxlc:LayoutControl>

</vncmvvm:ViewBase>